version: '3.8'

x-dotnet-local: &dotnet-local
  environment:
    ASPNETCORE_ENVIRONMENT: Local
    DOTNET_ENVIRONMENT: Local

services:
  nginx:
    image: nginx:latest
    container_name: gateway
    ports:
      - "9000:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - organization-api

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: crnqNBgZM9-_otAFGwLh2
      MYSQL_DATABASE: hardware
      MYSQL_USER: hw_user
      MYSQL_PASSWORD: TERXvBWQ7nmy7L8pyAoC
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  organization-api:
    <<: *dotnet-local
    build:
      context: ../Organization-API
    container_name: organization-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Organization-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  resource-api:
    <<: *dotnet-local
    build:
      context: ../Resources-API
    container_name: resources-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Resources-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  finance-api:
    <<: *dotnet-local
    build:
      context: ../Finance-API
    container_name: finance-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Finance-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  sshkeys-api:
    <<: *dotnet-local
    build:
      context: ../SshKeys-API
    container_name: sshkeys-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../SshKeys-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  teammates-api:
    <<: *dotnet-local
    build:
      context: ../Teammates-API
    container_name: teammates-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Teammates-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  admin-resources-api:
    <<: *dotnet-local
    build:
      context: ../Admin-Resources-API
    container_name: admin-resources-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Admin-Resources-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  admin-plans-api:
    <<: *dotnet-local
    build:
      context: ../Admin-Plans-API
    container_name: admin-plans-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Admin-Plans-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  admin-organizations-api:
    <<: *dotnet-local
    build:
      context: ../Admin-Organizations-API
    container_name: admin-organizations-api
    depends_on:
      - mysql
    expose:
      - "8080"
    volumes:
      - ../Admin-Organizations-API/appsettings.Local.json:/app/appsettings.Local.json:ro

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    name: rackdog-net

volumes:
  mysql_data:
  redis_data:

